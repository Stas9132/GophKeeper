syntax = "proto3";

package keeper;
option go_package = "/keeper";
import "google/api/annotations.proto";


service keeper {
  rpc Health(Empty) returns(HealthMain) {
    option (google.api.http) = {
      get: "/health"
    };
  }
  rpc Register(AuthMain) returns(Empty) {
    option (google.api.http) = {
      post: "/register"
      body: "*"
    };
  }
  rpc Login(AuthMain) returns(Empty) {
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }
  rpc Logout(Empty) returns(Empty) {
    option (google.api.http) = {
      post: "/logout"
      body: "*"
    };
  }
  rpc Sync(SyncMain) returns(SyncMain){
    option (google.api.http) = {
      post: "/sync"
      body: "*"
    };
  }
}


message Empty{}

message HealthMain {
  string Status = 1;
  string Version = 2;
  string Message = 3;
}

message AuthMain {
  string User = 1;
  string Password = 2;
}

message SyncMain {
  message KeysMain{
    string Name = 1;
    TypeCode Type = 2;
  }
  enum TypeCode {
    TYPE_NIL = 0;
  }
  repeated KeysMain Keys = 1;
}


